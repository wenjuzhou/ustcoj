# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-08-20 06:33
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import jsonfield.fields
import markdownx.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('problem', '0002_auto_20170809_1325'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', markdownx.models.MarkdownxField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('pub_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='time to publish')),
                ('mod_time', models.DateTimeField(auto_now=True, verbose_name='time modified')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='time added')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('managers', models.ManyToManyField(related_name='managed_contest_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContestProblem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', markdownx.models.MarkdownxField()),
                ('input_description', markdownx.models.MarkdownxField()),
                ('output_description', markdownx.models.MarkdownxField()),
                ('hint', markdownx.models.MarkdownxField()),
                ('samples', jsonfield.fields.JSONField()),
                ('input_method', models.CharField(default='stdin', max_length=31)),
                ('output_method', models.CharField(default='stdout', max_length=31)),
                ('time_limit', models.IntegerField(default=1000, verbose_name='time limit (ms)')),
                ('memory_limit', models.IntegerField(default=256, verbose_name='memory limit (MB)')),
                ('testset_id', models.CharField(max_length=255)),
                ('source', models.CharField(blank=True, max_length=255)),
                ('pub_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='time to publish')),
                ('mod_time', models.DateTimeField(auto_now=True, verbose_name='time modified')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='time added')),
                ('public', models.BooleanField(default=False)),
                ('special_judge', models.BooleanField(default=False)),
                ('index', models.CharField(max_length=15)),
                ('score', models.IntegerField(default=0)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problem_set', to='contest.Contest')),
                ('tags', models.ManyToManyField(to='problem.ProblemTag')),
            ],
            options={
                'ordering': ['index'],
            },
        ),
        migrations.CreateModel(
            name='PlayerInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('info', jsonfield.fields.JSONField()),
                ('reg_time', models.DateTimeField(auto_now_add=True)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contest.Contest')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='contest',
            name='players',
            field=models.ManyToManyField(related_name='joined_contest_set', through='contest.PlayerInfo', to=settings.AUTH_USER_MODEL),
        ),
    ]
